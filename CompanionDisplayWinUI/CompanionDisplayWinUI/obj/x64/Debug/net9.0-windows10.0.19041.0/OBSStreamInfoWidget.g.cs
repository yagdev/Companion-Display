#pragma checksum "C:\Users\Dinis\source\repos\CompanionDisplayWinUI\CompanionDisplayWinUI\OBSStreamInfoWidget.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "4E4E7086C3C68F1F661B19E422E83DA8D166B9E1820038F7E2943BE66800E6A2"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanionDisplayWinUI
{
    partial class OBSStreamInfoWidget : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // OBSStreamInfoWidget.xaml line 2
                {
                    global::Microsoft.UI.Xaml.Controls.Page element1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Page>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded;
                    ((global::Microsoft.UI.Xaml.Controls.Page)element1).Unloaded += this.Page_Unloaded;
                }
                break;
            case 2: // OBSStreamInfoWidget.xaml line 115
                {
                    this.OBSError = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // OBSStreamInfoWidget.xaml line 119
                {
                    this.ReconnectBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ReconnectBtn).Tapped += this.Button_Tapped;
                }
                break;
            case 4: // OBSStreamInfoWidget.xaml line 109
                {
                    this.RecordingSize = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 5: // OBSStreamInfoWidget.xaml line 105
                {
                    this.RecordingDuration = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 6: // OBSStreamInfoWidget.xaml line 101
                {
                    this.TimeCodeRecording = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 7: // OBSStreamInfoWidget.xaml line 97
                {
                    this.PausedStatus = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 8: // OBSStreamInfoWidget.xaml line 93
                {
                    this.RecordingStatus = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 9: // OBSStreamInfoWidget.xaml line 82
                {
                    this.StreamingUploadedBytes = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 10: // OBSStreamInfoWidget.xaml line 78
                {
                    this.SkippedFramesStreaming = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 11: // OBSStreamInfoWidget.xaml line 74
                {
                    this.StreamingTotalFrames = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 12: // OBSStreamInfoWidget.xaml line 70
                {
                    this.StreamCongestion = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 13: // OBSStreamInfoWidget.xaml line 66
                {
                    this.StreamDuration = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 14: // OBSStreamInfoWidget.xaml line 62
                {
                    this.StreamTimeCode = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 15: // OBSStreamInfoWidget.xaml line 58
                {
                    this.ReconnectingStats = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 16: // OBSStreamInfoWidget.xaml line 54
                {
                    this.StreamingStatus = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 17: // OBSStreamInfoWidget.xaml line 43
                {
                    this.OBSRAMUsage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 18: // OBSStreamInfoWidget.xaml line 39
                {
                    this.OBSCPUUsage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 19: // OBSStreamInfoWidget.xaml line 35
                {
                    this.OBSFramerate = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 20: // OBSStreamInfoWidget.xaml line 31
                {
                    this.OBSAvgRenderTime = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 21: // OBSStreamInfoWidget.xaml line 27
                {
                    this.OBSOutputTotal = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 22: // OBSStreamInfoWidget.xaml line 23
                {
                    this.OBSMissed = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 23: // OBSStreamInfoWidget.xaml line 19
                {
                    this.OBSRendered = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

