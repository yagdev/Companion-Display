//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace CompanionDisplayWinUI
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        private global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[157];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Media.AcrylicBrush";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Media.XamlCompositionBrushBase";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "Windows.UI.Color";
            _typeNameTable[8] = "System.ValueType";
            _typeNameTable[9] = "System.Nullable`1<Double>";
            _typeNameTable[10] = "TimeSpan";
            _typeNameTable[11] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[12] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[13] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[14] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[15] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[17] = "System.Enum";
            _typeNameTable[18] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[19] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[23] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[25] = "String";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[29] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[30] = "Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost";
            _typeNameTable[31] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Controls.ScrollViewer";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.ItemsRepeater";
            _typeNameTable[36] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[37] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.ItemsSourceView";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Controls.StackLayout";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Controls.VirtualizingLayout";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation";
            _typeNameTable[44] = "Microsoft.UI.Xaml.Controls.FlyoutPresenter";
            _typeNameTable[45] = "Byte";
            _typeNameTable[46] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[50] = "CompanionDisplayWinUI.AllWidgets";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[53] = "CompanionDisplayWinUI.AudioDevice";
            _typeNameTable[54] = "CompanionDisplayWinUI.BlankPage1";
            _typeNameTable[55] = "Microsoft.UI.Xaml.Controls.WebView2";
            _typeNameTable[56] = "Microsoft.Web.WebView2.Core.CoreWebView2";
            _typeNameTable[57] = "System.Uri";
            _typeNameTable[58] = "CompanionDisplayWinUI.BlankPage2";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.Expander";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Controls.ExpandDirection";
            _typeNameTable[61] = "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.ColorPicker";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Controls.ColorSpectrumComponents";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.ColorSpectrumShape";
            _typeNameTable[65] = "Int32";
            _typeNameTable[66] = "System.Nullable`1<Windows.UI.Color>";
            _typeNameTable[67] = "Microsoft.UI.Xaml.Controls.DropDownButton";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Controls.Button";
            _typeNameTable[69] = "CompanionDisplayWinUI.BlankPage3";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.TabView";
            _typeNameTable[71] = "System.Windows.Input.ICommand";
            _typeNameTable[72] = "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode";
            _typeNameTable[73] = "Microsoft.UI.Xaml.Controls.TabViewWidthMode";
            _typeNameTable[74] = "Microsoft.UI.Xaml.Controls.Primitives.TabViewListView";
            _typeNameTable[75] = "Microsoft.UI.Xaml.Controls.ListView";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[77] = "CompanionDisplayWinUI.BrowserTab";
            _typeNameTable[78] = "CompanionDisplayWinUI.BTBatteryIndividual";
            _typeNameTable[79] = "CompanionDisplayWinUI.BTLEIndividual";
            _typeNameTable[80] = "CompanionDisplayWinUI.ClockSensor";
            _typeNameTable[81] = "CompanionDisplayWinUI.FactorSensor";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[83] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[84] = "CompanionDisplayWinUI.FanSensor";
            _typeNameTable[85] = "CompanionDisplayWinUI.IndividualAudioControl";
            _typeNameTable[86] = "CompanionDisplayWinUI.IndividualComponent";
            _typeNameTable[87] = "CompanionDisplayWinUI.IndividualMonitor";
            _typeNameTable[88] = "CompanionDisplayWinUI.LoadSensors";
            _typeNameTable[89] = "CompanionDisplayWinUI.LyricsView";
            _typeNameTable[90] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[91] = "Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[93] = "CompanionDisplayWinUI.MainWindow";
            _typeNameTable[94] = "CompanionDisplayWinUI.MediaPlayerWidget";
            _typeNameTable[95] = "CompanionDisplayWinUI.MediaPlayerWidgetWidgetSettings";
            _typeNameTable[96] = "CompanionDisplayWinUI.MonitorBrightness";
            _typeNameTable[97] = "CompanionDisplayWinUI.MusixmatchIntegrationProto";
            _typeNameTable[98] = "CompanionDisplayWinUI.NORC_WidgetApps";
            _typeNameTable[99] = "CompanionDisplayWinUI.NORC_WidgetMacros";
            _typeNameTable[100] = "CompanionDisplayWinUI.NORC_WidgetPhone";
            _typeNameTable[101] = "Microsoft.UI.Xaml.Controls.TextBox";
            _typeNameTable[102] = "CompanionDisplayWinUI.NotesWidget";
            _typeNameTable[103] = "CompanionDisplayWinUI.NumPadWidget";
            _typeNameTable[104] = "CompanionDisplayWinUI.ObsSceneControllerWidget";
            _typeNameTable[105] = "CompanionDisplayWinUI.ObsStreamControlsWidget";
            _typeNameTable[106] = "CompanionDisplayWinUI.OBSStreamInfoWidget";
            _typeNameTable[107] = "CompanionDisplayWinUI.PopOutPlayer";
            _typeNameTable[108] = "CompanionDisplayWinUI.PopupWidget";
            _typeNameTable[109] = "CompanionDisplayWinUI.PowerSensor";
            _typeNameTable[110] = "CompanionDisplayWinUI.SetupStep0";
            _typeNameTable[111] = "CompanionDisplayWinUI.SetupStep1";
            _typeNameTable[112] = "CompanionDisplayWinUI.SetupStep2";
            _typeNameTable[113] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[114] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[115] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[116] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[117] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[118] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[119] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[120] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[121] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[122] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[123] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[124] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[125] = "Single";
            _typeNameTable[126] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[127] = "CompanionDisplayWinUI.SetupStep3";
            _typeNameTable[128] = "CompanionDisplayWinUI.SetupStep4";
            _typeNameTable[129] = "CompanionDisplayWinUI.SleepPage";
            _typeNameTable[130] = "CompanionDisplayWinUI.SmallDataSensor";
            _typeNameTable[131] = "CompanionDisplayWinUI.SpotifyPlayer";
            _typeNameTable[132] = "CompanionDisplayWinUI.TemperatureSensor";
            _typeNameTable[133] = "CompanionDisplayWinUI.TimeWidget";
            _typeNameTable[134] = "CompanionDisplayWinUI.TimeWidgetWidgetSettings";
            _typeNameTable[135] = "CompanionDisplayWinUI.TwitchActiveModsWidget";
            _typeNameTable[136] = "CompanionDisplayWinUI.TwitchActivityFeedWidget";
            _typeNameTable[137] = "CompanionDisplayWinUI.TwitchAutoModWidget";
            _typeNameTable[138] = "CompanionDisplayWinUI.TwitchChatWidget";
            _typeNameTable[139] = "CompanionDisplayWinUI.TwitchCollabWidget";
            _typeNameTable[140] = "CompanionDisplayWinUI.TwitchModActionsWidget";
            _typeNameTable[141] = "CompanionDisplayWinUI.TwitchQuickActionsWidget";
            _typeNameTable[142] = "CompanionDisplayWinUI.TwitchStreamHealthWidget";
            _typeNameTable[143] = "CompanionDisplayWinUI.TwitchStreamInfoWidget";
            _typeNameTable[144] = "CompanionDisplayWinUI.TwitchStreamMiniplayerWidget";
            _typeNameTable[145] = "CompanionDisplayWinUI.TwitchUnbanWidget";
            _typeNameTable[146] = "CompanionDisplayWinUI.UpdateWarning";
            _typeNameTable[147] = "CompanionDisplayWinUI.VoltageSensor";
            _typeNameTable[148] = "CompanionDisplayWinUI.WidgetAudioControl";
            _typeNameTable[149] = "CompanionDisplayWinUI.WidgetMonitorBrightness";
            _typeNameTable[150] = "CompanionDisplayWinUI.WidgetPhoneIndividual";
            _typeNameTable[151] = "CompanionDisplayWinUI.WidgetPhoto";
            _typeNameTable[152] = "CompanionDisplayWinUI.WidgetPhotoWidgetSettings";
            _typeNameTable[153] = "CompanionDisplayWinUI.WidgetSensors";
            _typeNameTable[154] = "CompanionDisplayWinUI.WidgetStack";
            _typeNameTable[155] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[156] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[157];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Media.AcrylicBrush);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::Windows.UI.Color);
            _typeTable[8] = typeof(global::System.ValueType);
            _typeTable[9] = typeof(global::System.Nullable<global::System.Double>);
            _typeTable[10] = typeof(global::System.TimeSpan);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[12] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[14] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[17] = typeof(global::System.Enum);
            _typeTable[18] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[25] = typeof(global::System.String);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[29] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[30] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollViewer);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[37] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Controls.StackLayout);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation);
            _typeTable[44] = typeof(global::Microsoft.UI.Xaml.Controls.FlyoutPresenter);
            _typeTable[45] = typeof(global::System.Byte);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[50] = typeof(global::CompanionDisplayWinUI.AllWidgets);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[53] = typeof(global::CompanionDisplayWinUI.AudioDevice);
            _typeTable[54] = typeof(global::CompanionDisplayWinUI.BlankPage1);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.Controls.WebView2);
            _typeTable[56] = typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2);
            _typeTable[57] = typeof(global::System.Uri);
            _typeTable[58] = typeof(global::CompanionDisplayWinUI.BlankPage2);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.Expander);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.ColorPicker);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape);
            _typeTable[65] = typeof(global::System.Int32);
            _typeTable[66] = typeof(global::System.Nullable<global::Windows.UI.Color>);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.Controls.DropDownButton);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Controls.Button);
            _typeTable[69] = typeof(global::CompanionDisplayWinUI.BlankPage3);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.TabView);
            _typeTable[71] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[72] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode);
            _typeTable[73] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.TabViewListView);
            _typeTable[75] = typeof(global::Microsoft.UI.Xaml.Controls.ListView);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsControl);
            _typeTable[77] = typeof(global::CompanionDisplayWinUI.BrowserTab);
            _typeTable[78] = typeof(global::CompanionDisplayWinUI.BTBatteryIndividual);
            _typeTable[79] = typeof(global::CompanionDisplayWinUI.BTLEIndividual);
            _typeTable[80] = typeof(global::CompanionDisplayWinUI.ClockSensor);
            _typeTable[81] = typeof(global::CompanionDisplayWinUI.FactorSensor);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[84] = typeof(global::CompanionDisplayWinUI.FanSensor);
            _typeTable[85] = typeof(global::CompanionDisplayWinUI.IndividualAudioControl);
            _typeTable[86] = typeof(global::CompanionDisplayWinUI.IndividualComponent);
            _typeTable[87] = typeof(global::CompanionDisplayWinUI.IndividualMonitor);
            _typeTable[88] = typeof(global::CompanionDisplayWinUI.LoadSensors);
            _typeTable[89] = typeof(global::CompanionDisplayWinUI.LyricsView);
            _typeTable[90] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[91] = typeof(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[93] = typeof(global::CompanionDisplayWinUI.MainWindow);
            _typeTable[94] = typeof(global::CompanionDisplayWinUI.MediaPlayerWidget);
            _typeTable[95] = typeof(global::CompanionDisplayWinUI.MediaPlayerWidgetWidgetSettings);
            _typeTable[96] = typeof(global::CompanionDisplayWinUI.MonitorBrightness);
            _typeTable[97] = typeof(global::CompanionDisplayWinUI.MusixmatchIntegrationProto);
            _typeTable[98] = typeof(global::CompanionDisplayWinUI.NORC_WidgetApps);
            _typeTable[99] = typeof(global::CompanionDisplayWinUI.NORC_WidgetMacros);
            _typeTable[100] = typeof(global::CompanionDisplayWinUI.NORC_WidgetPhone);
            _typeTable[101] = typeof(global::Microsoft.UI.Xaml.Controls.TextBox);
            _typeTable[102] = typeof(global::CompanionDisplayWinUI.NotesWidget);
            _typeTable[103] = typeof(global::CompanionDisplayWinUI.NumPadWidget);
            _typeTable[104] = typeof(global::CompanionDisplayWinUI.ObsSceneControllerWidget);
            _typeTable[105] = typeof(global::CompanionDisplayWinUI.ObsStreamControlsWidget);
            _typeTable[106] = typeof(global::CompanionDisplayWinUI.OBSStreamInfoWidget);
            _typeTable[107] = typeof(global::CompanionDisplayWinUI.PopOutPlayer);
            _typeTable[108] = typeof(global::CompanionDisplayWinUI.PopupWidget);
            _typeTable[109] = typeof(global::CompanionDisplayWinUI.PowerSensor);
            _typeTable[110] = typeof(global::CompanionDisplayWinUI.SetupStep0);
            _typeTable[111] = typeof(global::CompanionDisplayWinUI.SetupStep1);
            _typeTable[112] = typeof(global::CompanionDisplayWinUI.SetupStep2);
            _typeTable[113] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[114] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[115] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[116] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[117] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[118] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[119] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[120] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[121] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[122] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[123] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[124] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[125] = typeof(global::System.Single);
            _typeTable[126] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[127] = typeof(global::CompanionDisplayWinUI.SetupStep3);
            _typeTable[128] = typeof(global::CompanionDisplayWinUI.SetupStep4);
            _typeTable[129] = typeof(global::CompanionDisplayWinUI.SleepPage);
            _typeTable[130] = typeof(global::CompanionDisplayWinUI.SmallDataSensor);
            _typeTable[131] = typeof(global::CompanionDisplayWinUI.SpotifyPlayer);
            _typeTable[132] = typeof(global::CompanionDisplayWinUI.TemperatureSensor);
            _typeTable[133] = typeof(global::CompanionDisplayWinUI.TimeWidget);
            _typeTable[134] = typeof(global::CompanionDisplayWinUI.TimeWidgetWidgetSettings);
            _typeTable[135] = typeof(global::CompanionDisplayWinUI.TwitchActiveModsWidget);
            _typeTable[136] = typeof(global::CompanionDisplayWinUI.TwitchActivityFeedWidget);
            _typeTable[137] = typeof(global::CompanionDisplayWinUI.TwitchAutoModWidget);
            _typeTable[138] = typeof(global::CompanionDisplayWinUI.TwitchChatWidget);
            _typeTable[139] = typeof(global::CompanionDisplayWinUI.TwitchCollabWidget);
            _typeTable[140] = typeof(global::CompanionDisplayWinUI.TwitchModActionsWidget);
            _typeTable[141] = typeof(global::CompanionDisplayWinUI.TwitchQuickActionsWidget);
            _typeTable[142] = typeof(global::CompanionDisplayWinUI.TwitchStreamHealthWidget);
            _typeTable[143] = typeof(global::CompanionDisplayWinUI.TwitchStreamInfoWidget);
            _typeTable[144] = typeof(global::CompanionDisplayWinUI.TwitchStreamMiniplayerWidget);
            _typeTable[145] = typeof(global::CompanionDisplayWinUI.TwitchUnbanWidget);
            _typeTable[146] = typeof(global::CompanionDisplayWinUI.UpdateWarning);
            _typeTable[147] = typeof(global::CompanionDisplayWinUI.VoltageSensor);
            _typeTable[148] = typeof(global::CompanionDisplayWinUI.WidgetAudioControl);
            _typeTable[149] = typeof(global::CompanionDisplayWinUI.WidgetMonitorBrightness);
            _typeTable[150] = typeof(global::CompanionDisplayWinUI.WidgetPhoneIndividual);
            _typeTable[151] = typeof(global::CompanionDisplayWinUI.WidgetPhoto);
            _typeTable[152] = typeof(global::CompanionDisplayWinUI.WidgetPhotoWidgetSettings);
            _typeTable[153] = typeof(global::CompanionDisplayWinUI.WidgetSensors);
            _typeTable[154] = typeof(global::CompanionDisplayWinUI.WidgetStack);
            _typeTable[155] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[156] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_AcrylicBrush() { return new global::Microsoft.UI.Xaml.Media.AcrylicBrush(); }
        private object Activate_11_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_28_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_30_ItemsRepeaterScrollHost() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost(); }
        private object Activate_33_NavigationViewItemSeparator() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator(); }
        private object Activate_35_ItemsRepeater() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeater(); }
        private object Activate_38_ItemCollectionTransitionProvider() { return new global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider(); }
        private object Activate_40_StackLayout() { return new global::Microsoft.UI.Xaml.Controls.StackLayout(); }
        private object Activate_41_VirtualizingLayout() { return new global::Microsoft.UI.Xaml.Controls.VirtualizingLayout(); }
        private object Activate_46_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_48_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_50_AllWidgets() { return new global::CompanionDisplayWinUI.AllWidgets(); }
        private object Activate_53_AudioDevice() { return new global::CompanionDisplayWinUI.AudioDevice(); }
        private object Activate_54_BlankPage1() { return new global::CompanionDisplayWinUI.BlankPage1(); }
        private object Activate_55_WebView2() { return new global::Microsoft.UI.Xaml.Controls.WebView2(); }
        private object Activate_59_Expander() { return new global::Microsoft.UI.Xaml.Controls.Expander(); }
        private object Activate_62_ColorPicker() { return new global::Microsoft.UI.Xaml.Controls.ColorPicker(); }
        private object Activate_67_DropDownButton() { return new global::Microsoft.UI.Xaml.Controls.DropDownButton(); }
        private object Activate_69_BlankPage3() { return new global::CompanionDisplayWinUI.BlankPage3(); }
        private object Activate_70_TabView() { return new global::Microsoft.UI.Xaml.Controls.TabView(); }
        private object Activate_74_TabViewListView() { return new global::Microsoft.UI.Xaml.Controls.Primitives.TabViewListView(); }
        private object Activate_77_BrowserTab() { return new global::CompanionDisplayWinUI.BrowserTab(); }
        private object Activate_78_BTBatteryIndividual() { return new global::CompanionDisplayWinUI.BTBatteryIndividual(); }
        private object Activate_79_BTLEIndividual() { return new global::CompanionDisplayWinUI.BTLEIndividual(); }
        private object Activate_80_ClockSensor() { return new global::CompanionDisplayWinUI.ClockSensor(); }
        private object Activate_81_FactorSensor() { return new global::CompanionDisplayWinUI.FactorSensor(); }
        private object Activate_82_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_84_FanSensor() { return new global::CompanionDisplayWinUI.FanSensor(); }
        private object Activate_85_IndividualAudioControl() { return new global::CompanionDisplayWinUI.IndividualAudioControl(); }
        private object Activate_86_IndividualComponent() { return new global::CompanionDisplayWinUI.IndividualComponent(); }
        private object Activate_87_IndividualMonitor() { return new global::CompanionDisplayWinUI.IndividualMonitor(); }
        private object Activate_88_LoadSensors() { return new global::CompanionDisplayWinUI.LoadSensors(); }
        private object Activate_89_LyricsView() { return new global::CompanionDisplayWinUI.LyricsView(); }
        private object Activate_91_DesktopAcrylicBackdrop() { return new global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop(); }
        private object Activate_93_MainWindow() { return new global::CompanionDisplayWinUI.MainWindow(); }
        private object Activate_94_MediaPlayerWidget() { return new global::CompanionDisplayWinUI.MediaPlayerWidget(); }
        private object Activate_95_MediaPlayerWidgetWidgetSettings() { return new global::CompanionDisplayWinUI.MediaPlayerWidgetWidgetSettings(); }
        private object Activate_96_MonitorBrightness() { return new global::CompanionDisplayWinUI.MonitorBrightness(); }
        private object Activate_97_MusixmatchIntegrationProto() { return new global::CompanionDisplayWinUI.MusixmatchIntegrationProto(); }
        private object Activate_98_NORC_WidgetApps() { return new global::CompanionDisplayWinUI.NORC_WidgetApps(); }
        private object Activate_99_NORC_WidgetMacros() { return new global::CompanionDisplayWinUI.NORC_WidgetMacros(); }
        private object Activate_100_NORC_WidgetPhone() { return new global::CompanionDisplayWinUI.NORC_WidgetPhone(); }
        private object Activate_102_NotesWidget() { return new global::CompanionDisplayWinUI.NotesWidget(); }
        private object Activate_103_NumPadWidget() { return new global::CompanionDisplayWinUI.NumPadWidget(); }
        private object Activate_104_ObsSceneControllerWidget() { return new global::CompanionDisplayWinUI.ObsSceneControllerWidget(); }
        private object Activate_105_ObsStreamControlsWidget() { return new global::CompanionDisplayWinUI.ObsStreamControlsWidget(); }
        private object Activate_106_OBSStreamInfoWidget() { return new global::CompanionDisplayWinUI.OBSStreamInfoWidget(); }
        private object Activate_109_PowerSensor() { return new global::CompanionDisplayWinUI.PowerSensor(); }
        private object Activate_110_SetupStep0() { return new global::CompanionDisplayWinUI.SetupStep0(); }
        private object Activate_111_SetupStep1() { return new global::CompanionDisplayWinUI.SetupStep1(); }
        private object Activate_112_SetupStep2() { return new global::CompanionDisplayWinUI.SetupStep2(); }
        private object Activate_113_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_123_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_127_SetupStep3() { return new global::CompanionDisplayWinUI.SetupStep3(); }
        private object Activate_128_SetupStep4() { return new global::CompanionDisplayWinUI.SetupStep4(); }
        private object Activate_129_SleepPage() { return new global::CompanionDisplayWinUI.SleepPage(); }
        private object Activate_130_SmallDataSensor() { return new global::CompanionDisplayWinUI.SmallDataSensor(); }
        private object Activate_131_SpotifyPlayer() { return new global::CompanionDisplayWinUI.SpotifyPlayer(); }
        private object Activate_132_TemperatureSensor() { return new global::CompanionDisplayWinUI.TemperatureSensor(); }
        private object Activate_133_TimeWidget() { return new global::CompanionDisplayWinUI.TimeWidget(); }
        private object Activate_134_TimeWidgetWidgetSettings() { return new global::CompanionDisplayWinUI.TimeWidgetWidgetSettings(); }
        private object Activate_135_TwitchActiveModsWidget() { return new global::CompanionDisplayWinUI.TwitchActiveModsWidget(); }
        private object Activate_136_TwitchActivityFeedWidget() { return new global::CompanionDisplayWinUI.TwitchActivityFeedWidget(); }
        private object Activate_137_TwitchAutoModWidget() { return new global::CompanionDisplayWinUI.TwitchAutoModWidget(); }
        private object Activate_138_TwitchChatWidget() { return new global::CompanionDisplayWinUI.TwitchChatWidget(); }
        private object Activate_139_TwitchCollabWidget() { return new global::CompanionDisplayWinUI.TwitchCollabWidget(); }
        private object Activate_140_TwitchModActionsWidget() { return new global::CompanionDisplayWinUI.TwitchModActionsWidget(); }
        private object Activate_141_TwitchQuickActionsWidget() { return new global::CompanionDisplayWinUI.TwitchQuickActionsWidget(); }
        private object Activate_142_TwitchStreamHealthWidget() { return new global::CompanionDisplayWinUI.TwitchStreamHealthWidget(); }
        private object Activate_143_TwitchStreamInfoWidget() { return new global::CompanionDisplayWinUI.TwitchStreamInfoWidget(); }
        private object Activate_144_TwitchStreamMiniplayerWidget() { return new global::CompanionDisplayWinUI.TwitchStreamMiniplayerWidget(); }
        private object Activate_145_TwitchUnbanWidget() { return new global::CompanionDisplayWinUI.TwitchUnbanWidget(); }
        private object Activate_146_UpdateWarning() { return new global::CompanionDisplayWinUI.UpdateWarning(); }
        private object Activate_147_VoltageSensor() { return new global::CompanionDisplayWinUI.VoltageSensor(); }
        private object Activate_148_WidgetAudioControl() { return new global::CompanionDisplayWinUI.WidgetAudioControl(); }
        private object Activate_149_WidgetMonitorBrightness() { return new global::CompanionDisplayWinUI.WidgetMonitorBrightness(); }
        private object Activate_150_WidgetPhoneIndividual() { return new global::CompanionDisplayWinUI.WidgetPhoneIndividual(); }
        private object Activate_151_WidgetPhoto() { return new global::CompanionDisplayWinUI.WidgetPhoto(); }
        private object Activate_152_WidgetPhotoWidgetSettings() { return new global::CompanionDisplayWinUI.WidgetPhotoWidgetSettings(); }
        private object Activate_153_WidgetSensors() { return new global::CompanionDisplayWinUI.WidgetSensors(); }
        private object Activate_154_WidgetStack() { return new global::CompanionDisplayWinUI.WidgetStack(); }
        private object Activate_155_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_AcrylicBrush() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.AcrylicBrush).TypeHandle);
        private void StaticInitializer_7_Color() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Color).TypeHandle);
        private void StaticInitializer_8_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_9_Nullable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Nullable<global::System.Double>).TypeHandle);
        private void StaticInitializer_10_TimeSpan() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.TimeSpan).TypeHandle);
        private void StaticInitializer_11_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_16_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_17_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_18_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_20_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_23_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_24_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_26_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_27_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_28_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_30_ItemsRepeaterScrollHost() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost).TypeHandle);
        private void StaticInitializer_33_NavigationViewItemSeparator() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator).TypeHandle);
        private void StaticInitializer_34_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_35_ItemsRepeater() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater).TypeHandle);
        private void StaticInitializer_36_Layout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Layout).TypeHandle);
        private void StaticInitializer_38_ItemCollectionTransitionProvider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider).TypeHandle);
        private void StaticInitializer_39_ItemsSourceView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView).TypeHandle);
        private void StaticInitializer_40_StackLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.StackLayout).TypeHandle);
        private void StaticInitializer_41_VirtualizingLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout).TypeHandle);
        private void StaticInitializer_43_IndexBasedLayoutOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation).TypeHandle);
        private void StaticInitializer_45_Byte() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Byte).TypeHandle);
        private void StaticInitializer_46_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_48_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_50_AllWidgets() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.AllWidgets).TypeHandle);
        private void StaticInitializer_53_AudioDevice() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.AudioDevice).TypeHandle);
        private void StaticInitializer_54_BlankPage1() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BlankPage1).TypeHandle);
        private void StaticInitializer_55_WebView2() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.WebView2).TypeHandle);
        private void StaticInitializer_56_CoreWebView2() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2).TypeHandle);
        private void StaticInitializer_57_Uri() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Uri).TypeHandle);
        private void StaticInitializer_58_BlankPage2() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BlankPage2).TypeHandle);
        private void StaticInitializer_59_Expander() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Expander).TypeHandle);
        private void StaticInitializer_60_ExpandDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection).TypeHandle);
        private void StaticInitializer_61_ExpanderTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings).TypeHandle);
        private void StaticInitializer_62_ColorPicker() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorPicker).TypeHandle);
        private void StaticInitializer_63_ColorSpectrumComponents() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents).TypeHandle);
        private void StaticInitializer_64_ColorSpectrumShape() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape).TypeHandle);
        private void StaticInitializer_66_Nullable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Nullable<global::Windows.UI.Color>).TypeHandle);
        private void StaticInitializer_67_DropDownButton() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.DropDownButton).TypeHandle);
        private void StaticInitializer_69_BlankPage3() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BlankPage3).TypeHandle);
        private void StaticInitializer_70_TabView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabView).TypeHandle);
        private void StaticInitializer_71_ICommand() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Windows.Input.ICommand).TypeHandle);
        private void StaticInitializer_72_TabViewCloseButtonOverlayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode).TypeHandle);
        private void StaticInitializer_73_TabViewWidthMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode).TypeHandle);
        private void StaticInitializer_74_TabViewListView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.TabViewListView).TypeHandle);
        private void StaticInitializer_77_BrowserTab() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BrowserTab).TypeHandle);
        private void StaticInitializer_78_BTBatteryIndividual() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BTBatteryIndividual).TypeHandle);
        private void StaticInitializer_79_BTLEIndividual() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.BTLEIndividual).TypeHandle);
        private void StaticInitializer_80_ClockSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.ClockSensor).TypeHandle);
        private void StaticInitializer_81_FactorSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.FactorSensor).TypeHandle);
        private void StaticInitializer_82_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_83_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_84_FanSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.FanSensor).TypeHandle);
        private void StaticInitializer_85_IndividualAudioControl() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.IndividualAudioControl).TypeHandle);
        private void StaticInitializer_86_IndividualComponent() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.IndividualComponent).TypeHandle);
        private void StaticInitializer_87_IndividualMonitor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.IndividualMonitor).TypeHandle);
        private void StaticInitializer_88_LoadSensors() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.LoadSensors).TypeHandle);
        private void StaticInitializer_89_LyricsView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.LyricsView).TypeHandle);
        private void StaticInitializer_91_DesktopAcrylicBackdrop() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop).TypeHandle);
        private void StaticInitializer_93_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.MainWindow).TypeHandle);
        private void StaticInitializer_94_MediaPlayerWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.MediaPlayerWidget).TypeHandle);
        private void StaticInitializer_95_MediaPlayerWidgetWidgetSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.MediaPlayerWidgetWidgetSettings).TypeHandle);
        private void StaticInitializer_96_MonitorBrightness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.MonitorBrightness).TypeHandle);
        private void StaticInitializer_97_MusixmatchIntegrationProto() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.MusixmatchIntegrationProto).TypeHandle);
        private void StaticInitializer_98_NORC_WidgetApps() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.NORC_WidgetApps).TypeHandle);
        private void StaticInitializer_99_NORC_WidgetMacros() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.NORC_WidgetMacros).TypeHandle);
        private void StaticInitializer_100_NORC_WidgetPhone() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.NORC_WidgetPhone).TypeHandle);
        private void StaticInitializer_102_NotesWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.NotesWidget).TypeHandle);
        private void StaticInitializer_103_NumPadWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.NumPadWidget).TypeHandle);
        private void StaticInitializer_104_ObsSceneControllerWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.ObsSceneControllerWidget).TypeHandle);
        private void StaticInitializer_105_ObsStreamControlsWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.ObsStreamControlsWidget).TypeHandle);
        private void StaticInitializer_106_OBSStreamInfoWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.OBSStreamInfoWidget).TypeHandle);
        private void StaticInitializer_107_PopOutPlayer() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.PopOutPlayer).TypeHandle);
        private void StaticInitializer_108_PopupWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.PopupWidget).TypeHandle);
        private void StaticInitializer_109_PowerSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.PowerSensor).TypeHandle);
        private void StaticInitializer_110_SetupStep0() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SetupStep0).TypeHandle);
        private void StaticInitializer_111_SetupStep1() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SetupStep1).TypeHandle);
        private void StaticInitializer_112_SetupStep2() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SetupStep2).TypeHandle);
        private void StaticInitializer_113_ScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollView).TypeHandle);
        private void StaticInitializer_115_ScrollingScrollMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode).TypeHandle);
        private void StaticInitializer_116_ScrollingContentOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation).TypeHandle);
        private void StaticInitializer_117_CompositionPropertySet() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionPropertySet).TypeHandle);
        private void StaticInitializer_118_CompositionObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionObject).TypeHandle);
        private void StaticInitializer_119_ScrollingScrollBarVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility).TypeHandle);
        private void StaticInitializer_120_ScrollingChainMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode).TypeHandle);
        private void StaticInitializer_121_ScrollingRailMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode).TypeHandle);
        private void StaticInitializer_122_ScrollingInputKinds() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds).TypeHandle);
        private void StaticInitializer_123_ScrollPresenter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter).TypeHandle);
        private void StaticInitializer_124_ScrollingInteractionState() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState).TypeHandle);
        private void StaticInitializer_126_ScrollingZoomMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode).TypeHandle);
        private void StaticInitializer_127_SetupStep3() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SetupStep3).TypeHandle);
        private void StaticInitializer_128_SetupStep4() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SetupStep4).TypeHandle);
        private void StaticInitializer_129_SleepPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SleepPage).TypeHandle);
        private void StaticInitializer_130_SmallDataSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SmallDataSensor).TypeHandle);
        private void StaticInitializer_131_SpotifyPlayer() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.SpotifyPlayer).TypeHandle);
        private void StaticInitializer_132_TemperatureSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TemperatureSensor).TypeHandle);
        private void StaticInitializer_133_TimeWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TimeWidget).TypeHandle);
        private void StaticInitializer_134_TimeWidgetWidgetSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TimeWidgetWidgetSettings).TypeHandle);
        private void StaticInitializer_135_TwitchActiveModsWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchActiveModsWidget).TypeHandle);
        private void StaticInitializer_136_TwitchActivityFeedWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchActivityFeedWidget).TypeHandle);
        private void StaticInitializer_137_TwitchAutoModWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchAutoModWidget).TypeHandle);
        private void StaticInitializer_138_TwitchChatWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchChatWidget).TypeHandle);
        private void StaticInitializer_139_TwitchCollabWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchCollabWidget).TypeHandle);
        private void StaticInitializer_140_TwitchModActionsWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchModActionsWidget).TypeHandle);
        private void StaticInitializer_141_TwitchQuickActionsWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchQuickActionsWidget).TypeHandle);
        private void StaticInitializer_142_TwitchStreamHealthWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchStreamHealthWidget).TypeHandle);
        private void StaticInitializer_143_TwitchStreamInfoWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchStreamInfoWidget).TypeHandle);
        private void StaticInitializer_144_TwitchStreamMiniplayerWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchStreamMiniplayerWidget).TypeHandle);
        private void StaticInitializer_145_TwitchUnbanWidget() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.TwitchUnbanWidget).TypeHandle);
        private void StaticInitializer_146_UpdateWarning() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.UpdateWarning).TypeHandle);
        private void StaticInitializer_147_VoltageSensor() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.VoltageSensor).TypeHandle);
        private void StaticInitializer_148_WidgetAudioControl() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetAudioControl).TypeHandle);
        private void StaticInitializer_149_WidgetMonitorBrightness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetMonitorBrightness).TypeHandle);
        private void StaticInitializer_150_WidgetPhoneIndividual() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetPhoneIndividual).TypeHandle);
        private void StaticInitializer_151_WidgetPhoto() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetPhoto).TypeHandle);
        private void StaticInitializer_152_WidgetPhotoWidgetSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetPhotoWidgetSettings).TypeHandle);
        private void StaticInitializer_153_WidgetSensors() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetSensors).TypeHandle);
        private void StaticInitializer_154_WidgetStack() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CompanionDisplayWinUI.WidgetStack).TypeHandle);
        private void StaticInitializer_155_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_156_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_18_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_156_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Media.AcrylicBrush
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.XamlCompositionBrushBase"));
                userType.Activator = Activate_4_AcrylicBrush;
                userType.StaticInitializer = StaticInitializer_4_AcrylicBrush;
                userType.AddMemberName("TintOpacity");
                userType.AddMemberName("TintColor");
                userType.AddMemberName("AlwaysUseFallback");
                userType.AddMemberName("TintLuminosityOpacity");
                userType.AddMemberName("TintTransitionDuration");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Double
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Windows.UI.Color
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_7_Color;
                userType.AddMemberName("A");
                userType.AddMemberName("R");
                userType.AddMemberName("G");
                userType.AddMemberName("B");
                xamlType = userType;
                break;

            case 8:   //  System.ValueType
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_8_ValueType;
                xamlType = userType;
                break;

            case 9:   //  System.Nullable`1<Double>
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Double"));
                userType.BoxInstance = userType.BoxType<global::System.Double>;
                userType.StaticInitializer = StaticInitializer_9_Nullable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  TimeSpan
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_10_TimeSpan;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_11_NavigationView;
                userType.StaticInitializer = StaticInitializer_11_NavigationView;
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 12:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_16_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 17:   //  System.Enum
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_17_Enum;
                xamlType = userType;
                break;

            case 18:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_18_IList;
                userType.CollectionAdd = VectorAdd_18_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_20_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_23_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 24:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_24_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 25:   //  String
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_26_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_27_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_28_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_30_ItemsRepeaterScrollHost;
                userType.StaticInitializer = StaticInitializer_30_ItemsRepeaterScrollHost;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.ScrollViewer");
                userType.AddMemberName("ScrollViewer");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("VerticalAnchorRatio");
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.UI.Xaml.Controls.ScrollViewer
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_33_NavigationViewItemSeparator;
                userType.StaticInitializer = StaticInitializer_33_NavigationViewItemSeparator;
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_34_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.ItemsRepeater
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_35_ItemsRepeater;
                userType.StaticInitializer = StaticInitializer_35_ItemsRepeater;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("Layout");
                userType.AddMemberName("Background");
                userType.AddMemberName("HorizontalCacheLength");
                userType.AddMemberName("ItemTransitionProvider");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemsSourceView");
                userType.AddMemberName("VerticalCacheLength");
                xamlType = userType;
                break;

            case 36:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_36_Layout;
                userType.AddMemberName("IndexBasedLayoutOrientation");
                xamlType = userType;
                break;

            case 37:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_38_ItemCollectionTransitionProvider;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.ItemsSourceView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_39_ItemsSourceView;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Xaml.Controls.StackLayout
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_40_StackLayout;
                userType.StaticInitializer = StaticInitializer_40_StackLayout;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Spacing");
                xamlType = userType;
                break;

            case 41:   //  Microsoft.UI.Xaml.Controls.VirtualizingLayout
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout"));
                userType.Activator = Activate_41_VirtualizingLayout;
                userType.StaticInitializer = StaticInitializer_41_VirtualizingLayout;
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_43_IndexBasedLayoutOrientation;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.None);
                userType.AddEnumValue("TopToBottom", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.TopToBottom);
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.LeftToRight);
                xamlType = userType;
                break;

            case 44:   //  Microsoft.UI.Xaml.Controls.FlyoutPresenter
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Byte
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_45_Byte;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_46_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_46_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("SelectsOnInvoked");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_48_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  CompanionDisplayWinUI.AllWidgets
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_AllWidgets;
                userType.StaticInitializer = StaticInitializer_50_AllWidgets;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 53:   //  CompanionDisplayWinUI.AudioDevice
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_AudioDevice;
                userType.StaticInitializer = StaticInitializer_53_AudioDevice;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  CompanionDisplayWinUI.BlankPage1
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_54_BlankPage1;
                userType.StaticInitializer = StaticInitializer_54_BlankPage1;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  Microsoft.UI.Xaml.Controls.WebView2
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_55_WebView2;
                userType.StaticInitializer = StaticInitializer_55_WebView2;
                userType.AddMemberName("CanGoBack");
                userType.AddMemberName("CanGoForward");
                userType.AddMemberName("CoreWebView2");
                userType.AddMemberName("DefaultBackgroundColor");
                userType.AddMemberName("Source");
                xamlType = userType;
                break;

            case 56:   //  Microsoft.Web.WebView2.Core.CoreWebView2
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_56_CoreWebView2;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  System.Uri
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_57_Uri;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 58:   //  CompanionDisplayWinUI.BlankPage2
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.StaticInitializer = StaticInitializer_58_BlankPage2;
                userType.AddMemberName("FullScreen");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.Expander
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_59_Expander;
                userType.StaticInitializer = StaticInitializer_59_Expander;
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("ExpandDirection");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Controls.ExpandDirection
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_60_ExpandDirection;
                userType.AddEnumValue("Down", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Down);
                userType.AddEnumValue("Up", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Up);
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_61_ExpanderTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.ColorPicker
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_62_ColorPicker;
                userType.StaticInitializer = StaticInitializer_62_ColorPicker;
                userType.AddMemberName("Color");
                userType.AddMemberName("ColorSpectrumComponents");
                userType.AddMemberName("ColorSpectrumShape");
                userType.AddMemberName("IsAlphaEnabled");
                userType.AddMemberName("IsAlphaSliderVisible");
                userType.AddMemberName("IsAlphaTextInputVisible");
                userType.AddMemberName("IsColorChannelTextInputVisible");
                userType.AddMemberName("IsColorPreviewVisible");
                userType.AddMemberName("IsColorSliderVisible");
                userType.AddMemberName("IsColorSpectrumVisible");
                userType.AddMemberName("IsHexInputVisible");
                userType.AddMemberName("IsMoreButtonVisible");
                userType.AddMemberName("MaxHue");
                userType.AddMemberName("MaxSaturation");
                userType.AddMemberName("MaxValue");
                userType.AddMemberName("MinHue");
                userType.AddMemberName("MinSaturation");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("PreviousColor");
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Controls.ColorSpectrumComponents
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_63_ColorSpectrumComponents;
                userType.AddEnumValue("HueValue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueValue);
                userType.AddEnumValue("ValueHue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueHue);
                userType.AddEnumValue("HueSaturation", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation);
                userType.AddEnumValue("SaturationHue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationHue);
                userType.AddEnumValue("SaturationValue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationValue);
                userType.AddEnumValue("ValueSaturation", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueSaturation);
                xamlType = userType;
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.ColorSpectrumShape
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_64_ColorSpectrumShape;
                userType.AddEnumValue("Box", global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Box);
                userType.AddEnumValue("Ring", global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Ring);
                xamlType = userType;
                break;

            case 65:   //  Int32
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  System.Nullable`1<Windows.UI.Color>
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Windows.UI.Color"));
                userType.BoxInstance = userType.BoxType<global::Windows.UI.Color>;
                userType.StaticInitializer = StaticInitializer_66_Nullable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Microsoft.UI.Xaml.Controls.DropDownButton
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Button"));
                userType.Activator = Activate_67_DropDownButton;
                userType.StaticInitializer = StaticInitializer_67_DropDownButton;
                xamlType = userType;
                break;

            case 68:   //  Microsoft.UI.Xaml.Controls.Button
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  CompanionDisplayWinUI.BlankPage3
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_69_BlankPage3;
                userType.StaticInitializer = StaticInitializer_69_BlankPage3;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.TabView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_70_TabView;
                userType.StaticInitializer = StaticInitializer_70_TabView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.TabView.TabItems");
                userType.AddMemberName("TabItems");
                userType.AddMemberName("CanReorderTabs");
                userType.AddMemberName("TabStripHeader");
                userType.AddMemberName("TabStripFooter");
                userType.AddMemberName("AddTabButtonCommand");
                userType.AddMemberName("AddTabButtonCommandParameter");
                userType.AddMemberName("AllowDropTabs");
                userType.AddMemberName("CanDragTabs");
                userType.AddMemberName("CanTearOutTabs");
                userType.AddMemberName("CloseButtonOverlayMode");
                userType.AddMemberName("IsAddTabButtonVisible");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("TabItemTemplate");
                userType.AddMemberName("TabItemTemplateSelector");
                userType.AddMemberName("TabItemsSource");
                userType.AddMemberName("TabStripFooterTemplate");
                userType.AddMemberName("TabStripHeaderTemplate");
                userType.AddMemberName("TabWidthMode");
                xamlType = userType;
                break;

            case 71:   //  System.Windows.Input.ICommand
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_71_ICommand;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 72:   //  Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_72_TabViewCloseButtonOverlayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Auto);
                userType.AddEnumValue("OnPointerOver", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.OnPointerOver);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Always);
                xamlType = userType;
                break;

            case 73:   //  Microsoft.UI.Xaml.Controls.TabViewWidthMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_73_TabViewWidthMode;
                userType.AddEnumValue("Equal", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Equal);
                userType.AddEnumValue("SizeToContent", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.SizeToContent);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Compact);
                xamlType = userType;
                break;

            case 74:   //  Microsoft.UI.Xaml.Controls.Primitives.TabViewListView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ListView"));
                userType.Activator = Activate_74_TabViewListView;
                userType.StaticInitializer = StaticInitializer_74_TabViewListView;
                xamlType = userType;
                break;

            case 75:   //  Microsoft.UI.Xaml.Controls.ListView
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 76:   //  Microsoft.UI.Xaml.Controls.ItemsControl
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 77:   //  CompanionDisplayWinUI.BrowserTab
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_77_BrowserTab;
                userType.StaticInitializer = StaticInitializer_77_BrowserTab;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  CompanionDisplayWinUI.BTBatteryIndividual
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_78_BTBatteryIndividual;
                userType.StaticInitializer = StaticInitializer_78_BTBatteryIndividual;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 79:   //  CompanionDisplayWinUI.BTLEIndividual
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_79_BTLEIndividual;
                userType.StaticInitializer = StaticInitializer_79_BTLEIndividual;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 80:   //  CompanionDisplayWinUI.ClockSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_80_ClockSensor;
                userType.StaticInitializer = StaticInitializer_80_ClockSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 81:   //  CompanionDisplayWinUI.FactorSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_81_FactorSensor;
                userType.StaticInitializer = StaticInitializer_81_FactorSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_82_ProgressRing;
                userType.StaticInitializer = StaticInitializer_82_ProgressRing;
                userType.AddMemberName("Value");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("IsActive");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 83:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_83_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  CompanionDisplayWinUI.FanSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_84_FanSensor;
                userType.StaticInitializer = StaticInitializer_84_FanSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  CompanionDisplayWinUI.IndividualAudioControl
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_85_IndividualAudioControl;
                userType.StaticInitializer = StaticInitializer_85_IndividualAudioControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  CompanionDisplayWinUI.IndividualComponent
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_86_IndividualComponent;
                userType.StaticInitializer = StaticInitializer_86_IndividualComponent;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  CompanionDisplayWinUI.IndividualMonitor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_87_IndividualMonitor;
                userType.StaticInitializer = StaticInitializer_87_IndividualMonitor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  CompanionDisplayWinUI.LoadSensors
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_88_LoadSensors;
                userType.StaticInitializer = StaticInitializer_88_LoadSensors;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  CompanionDisplayWinUI.LyricsView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_89_LyricsView;
                userType.StaticInitializer = StaticInitializer_89_LyricsView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 91:   //  Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_91_DesktopAcrylicBackdrop;
                userType.StaticInitializer = StaticInitializer_91_DesktopAcrylicBackdrop;
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 93:   //  CompanionDisplayWinUI.MainWindow
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_93_MainWindow;
                userType.StaticInitializer = StaticInitializer_93_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  CompanionDisplayWinUI.MediaPlayerWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_94_MediaPlayerWidget;
                userType.StaticInitializer = StaticInitializer_94_MediaPlayerWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  CompanionDisplayWinUI.MediaPlayerWidgetWidgetSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_95_MediaPlayerWidgetWidgetSettings;
                userType.StaticInitializer = StaticInitializer_95_MediaPlayerWidgetWidgetSettings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  CompanionDisplayWinUI.MonitorBrightness
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_96_MonitorBrightness;
                userType.StaticInitializer = StaticInitializer_96_MonitorBrightness;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  CompanionDisplayWinUI.MusixmatchIntegrationProto
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_97_MusixmatchIntegrationProto;
                userType.StaticInitializer = StaticInitializer_97_MusixmatchIntegrationProto;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  CompanionDisplayWinUI.NORC_WidgetApps
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_98_NORC_WidgetApps;
                userType.StaticInitializer = StaticInitializer_98_NORC_WidgetApps;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  CompanionDisplayWinUI.NORC_WidgetMacros
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_99_NORC_WidgetMacros;
                userType.StaticInitializer = StaticInitializer_99_NORC_WidgetMacros;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  CompanionDisplayWinUI.NORC_WidgetPhone
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_100_NORC_WidgetPhone;
                userType.StaticInitializer = StaticInitializer_100_NORC_WidgetPhone;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 101:   //  Microsoft.UI.Xaml.Controls.TextBox
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 102:   //  CompanionDisplayWinUI.NotesWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_NotesWidget;
                userType.StaticInitializer = StaticInitializer_102_NotesWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  CompanionDisplayWinUI.NumPadWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_103_NumPadWidget;
                userType.StaticInitializer = StaticInitializer_103_NumPadWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 104:   //  CompanionDisplayWinUI.ObsSceneControllerWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_104_ObsSceneControllerWidget;
                userType.StaticInitializer = StaticInitializer_104_ObsSceneControllerWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  CompanionDisplayWinUI.ObsStreamControlsWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_105_ObsStreamControlsWidget;
                userType.StaticInitializer = StaticInitializer_105_ObsStreamControlsWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  CompanionDisplayWinUI.OBSStreamInfoWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_106_OBSStreamInfoWidget;
                userType.StaticInitializer = StaticInitializer_106_OBSStreamInfoWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 107:   //  CompanionDisplayWinUI.PopOutPlayer
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.StaticInitializer = StaticInitializer_107_PopOutPlayer;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 108:   //  CompanionDisplayWinUI.PopupWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.StaticInitializer = StaticInitializer_108_PopupWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 109:   //  CompanionDisplayWinUI.PowerSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_109_PowerSensor;
                userType.StaticInitializer = StaticInitializer_109_PowerSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 110:   //  CompanionDisplayWinUI.SetupStep0
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_110_SetupStep0;
                userType.StaticInitializer = StaticInitializer_110_SetupStep0;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 111:   //  CompanionDisplayWinUI.SetupStep1
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_111_SetupStep1;
                userType.StaticInitializer = StaticInitializer_111_SetupStep1;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 112:   //  CompanionDisplayWinUI.SetupStep2
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_112_SetupStep2;
                userType.StaticInitializer = StaticInitializer_112_SetupStep2;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 113:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_113_ScrollView;
                userType.StaticInitializer = StaticInitializer_113_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 114:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 115:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_115_ScrollingScrollMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 116:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_116_ScrollingContentOrientation;
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 117:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.StaticInitializer = StaticInitializer_117_CompositionPropertySet;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 118:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_118_CompositionObject;
                xamlType = userType;
                break;

            case 119:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_119_ScrollingScrollBarVisibility;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 120:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_120_ScrollingChainMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 121:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_121_ScrollingRailMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 122:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_122_ScrollingInputKinds;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 123:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.StaticInitializer = StaticInitializer_123_ScrollPresenter;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 124:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_124_ScrollingInteractionState;
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 125:   //  Single
                xamlType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 126:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_126_ScrollingZoomMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 127:   //  CompanionDisplayWinUI.SetupStep3
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_127_SetupStep3;
                userType.StaticInitializer = StaticInitializer_127_SetupStep3;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 128:   //  CompanionDisplayWinUI.SetupStep4
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_128_SetupStep4;
                userType.StaticInitializer = StaticInitializer_128_SetupStep4;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 129:   //  CompanionDisplayWinUI.SleepPage
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_129_SleepPage;
                userType.StaticInitializer = StaticInitializer_129_SleepPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 130:   //  CompanionDisplayWinUI.SmallDataSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_130_SmallDataSensor;
                userType.StaticInitializer = StaticInitializer_130_SmallDataSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 131:   //  CompanionDisplayWinUI.SpotifyPlayer
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_131_SpotifyPlayer;
                userType.StaticInitializer = StaticInitializer_131_SpotifyPlayer;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 132:   //  CompanionDisplayWinUI.TemperatureSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_132_TemperatureSensor;
                userType.StaticInitializer = StaticInitializer_132_TemperatureSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 133:   //  CompanionDisplayWinUI.TimeWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_133_TimeWidget;
                userType.StaticInitializer = StaticInitializer_133_TimeWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 134:   //  CompanionDisplayWinUI.TimeWidgetWidgetSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_134_TimeWidgetWidgetSettings;
                userType.StaticInitializer = StaticInitializer_134_TimeWidgetWidgetSettings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 135:   //  CompanionDisplayWinUI.TwitchActiveModsWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_135_TwitchActiveModsWidget;
                userType.StaticInitializer = StaticInitializer_135_TwitchActiveModsWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 136:   //  CompanionDisplayWinUI.TwitchActivityFeedWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_136_TwitchActivityFeedWidget;
                userType.StaticInitializer = StaticInitializer_136_TwitchActivityFeedWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 137:   //  CompanionDisplayWinUI.TwitchAutoModWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_137_TwitchAutoModWidget;
                userType.StaticInitializer = StaticInitializer_137_TwitchAutoModWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 138:   //  CompanionDisplayWinUI.TwitchChatWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_138_TwitchChatWidget;
                userType.StaticInitializer = StaticInitializer_138_TwitchChatWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 139:   //  CompanionDisplayWinUI.TwitchCollabWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_139_TwitchCollabWidget;
                userType.StaticInitializer = StaticInitializer_139_TwitchCollabWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 140:   //  CompanionDisplayWinUI.TwitchModActionsWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_140_TwitchModActionsWidget;
                userType.StaticInitializer = StaticInitializer_140_TwitchModActionsWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 141:   //  CompanionDisplayWinUI.TwitchQuickActionsWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_141_TwitchQuickActionsWidget;
                userType.StaticInitializer = StaticInitializer_141_TwitchQuickActionsWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 142:   //  CompanionDisplayWinUI.TwitchStreamHealthWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_142_TwitchStreamHealthWidget;
                userType.StaticInitializer = StaticInitializer_142_TwitchStreamHealthWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 143:   //  CompanionDisplayWinUI.TwitchStreamInfoWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_143_TwitchStreamInfoWidget;
                userType.StaticInitializer = StaticInitializer_143_TwitchStreamInfoWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 144:   //  CompanionDisplayWinUI.TwitchStreamMiniplayerWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_144_TwitchStreamMiniplayerWidget;
                userType.StaticInitializer = StaticInitializer_144_TwitchStreamMiniplayerWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 145:   //  CompanionDisplayWinUI.TwitchUnbanWidget
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_145_TwitchUnbanWidget;
                userType.StaticInitializer = StaticInitializer_145_TwitchUnbanWidget;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 146:   //  CompanionDisplayWinUI.UpdateWarning
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_146_UpdateWarning;
                userType.StaticInitializer = StaticInitializer_146_UpdateWarning;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 147:   //  CompanionDisplayWinUI.VoltageSensor
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_147_VoltageSensor;
                userType.StaticInitializer = StaticInitializer_147_VoltageSensor;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 148:   //  CompanionDisplayWinUI.WidgetAudioControl
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_148_WidgetAudioControl;
                userType.StaticInitializer = StaticInitializer_148_WidgetAudioControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 149:   //  CompanionDisplayWinUI.WidgetMonitorBrightness
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_149_WidgetMonitorBrightness;
                userType.StaticInitializer = StaticInitializer_149_WidgetMonitorBrightness;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 150:   //  CompanionDisplayWinUI.WidgetPhoneIndividual
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_150_WidgetPhoneIndividual;
                userType.StaticInitializer = StaticInitializer_150_WidgetPhoneIndividual;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 151:   //  CompanionDisplayWinUI.WidgetPhoto
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_151_WidgetPhoto;
                userType.StaticInitializer = StaticInitializer_151_WidgetPhoto;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 152:   //  CompanionDisplayWinUI.WidgetPhotoWidgetSettings
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_152_WidgetPhotoWidgetSettings;
                userType.StaticInitializer = StaticInitializer_152_WidgetPhotoWidgetSettings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 153:   //  CompanionDisplayWinUI.WidgetSensors
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_153_WidgetSensors;
                userType.StaticInitializer = StaticInitializer_153_WidgetSensors;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 154:   //  CompanionDisplayWinUI.WidgetStack
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_154_WidgetStack;
                userType.StaticInitializer = StaticInitializer_154_WidgetStack;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 155:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_155_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_155_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 156:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_156_IList;
                userType.CollectionAdd = VectorAdd_156_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_AcrylicBrush_TintOpacity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            return that.TintOpacity;
        }
        private void set_1_AcrylicBrush_TintOpacity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            that.TintOpacity = (global::System.Double)Value;
        }
        private object get_2_AcrylicBrush_TintColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            return that.TintColor;
        }
        private void set_2_AcrylicBrush_TintColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            that.TintColor = (global::Windows.UI.Color)Value;
        }
        private object get_3_AcrylicBrush_AlwaysUseFallback(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            return that.AlwaysUseFallback;
        }
        private void set_3_AcrylicBrush_AlwaysUseFallback(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            that.AlwaysUseFallback = (global::System.Boolean)Value;
        }
        private object get_4_AcrylicBrush_TintLuminosityOpacity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            return that.TintLuminosityOpacity;
        }
        private void set_4_AcrylicBrush_TintLuminosityOpacity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            that.TintLuminosityOpacity = (global::System.Nullable<global::System.Double>)Value;
        }
        private object get_5_AcrylicBrush_TintTransitionDuration(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            return that.TintTransitionDuration;
        }
        private void set_5_AcrylicBrush_TintTransitionDuration(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.AcrylicBrush)instance;
            that.TintTransitionDuration = (global::System.TimeSpan)Value;
        }
        private object get_6_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_6_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_7_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_7_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_8_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_8_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_9_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_9_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_10_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_10_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_11_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_11_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_12_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_13_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_13_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_14_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_15_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_15_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_16_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_16_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_17_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_17_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_18_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_18_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_19_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_19_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_20_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_20_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_21_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_21_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_22_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_22_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_23_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_23_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_24_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_24_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_25_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_25_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_26_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_26_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_27_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_27_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_28_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_28_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_29_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_30_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_30_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_31_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_31_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_32_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_32_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_33_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_33_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_34_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_34_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_35_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_35_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_36_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_36_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_37_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_37_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_38_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_38_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_39_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_39_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_40_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_41_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_41_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_42_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_43_ItemsRepeaterScrollHost_ScrollViewer(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            return that.ScrollViewer;
        }
        private void set_43_ItemsRepeaterScrollHost_ScrollViewer(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            that.ScrollViewer = (global::Microsoft.UI.Xaml.Controls.ScrollViewer)Value;
        }
        private object get_44_ItemsRepeaterScrollHost_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            return that.CurrentAnchor;
        }
        private object get_45_ItemsRepeaterScrollHost_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_45_ItemsRepeaterScrollHost_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_46_ItemsRepeaterScrollHost_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_46_ItemsRepeaterScrollHost_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_47_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_47_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_48_ItemsRepeater_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTemplate;
        }
        private void set_48_ItemsRepeater_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_49_ItemsRepeater_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Layout;
        }
        private void set_49_ItemsRepeater_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_50_ItemsRepeater_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Background;
        }
        private void set_50_ItemsRepeater_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_51_ItemsRepeater_HorizontalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.HorizontalCacheLength;
        }
        private void set_51_ItemsRepeater_HorizontalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.HorizontalCacheLength = (global::System.Double)Value;
        }
        private object get_52_ItemsRepeater_ItemTransitionProvider(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTransitionProvider;
        }
        private void set_52_ItemsRepeater_ItemTransitionProvider(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTransitionProvider = (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider)Value;
        }
        private object get_53_ItemsRepeater_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSource;
        }
        private void set_53_ItemsRepeater_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_54_ItemsRepeater_ItemsSourceView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSourceView;
        }
        private object get_55_ItemsRepeater_VerticalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.VerticalCacheLength;
        }
        private void set_55_ItemsRepeater_VerticalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.VerticalCacheLength = (global::System.Double)Value;
        }
        private object get_56_StackLayout_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Orientation;
        }
        private void set_56_StackLayout_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_57_StackLayout_Spacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Spacing;
        }
        private void set_57_StackLayout_Spacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Spacing = (global::System.Double)Value;
        }
        private object get_58_Layout_IndexBasedLayoutOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Layout)instance;
            return that.IndexBasedLayoutOrientation;
        }
        private object get_59_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_59_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_60_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_60_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_61_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_61_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_62_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_62_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_63_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_63_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_64_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_64_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_65_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_66_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_66_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_67_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_67_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_68_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_68_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_69_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_69_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_70_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_71_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_71_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_72_WebView2_CanGoBack(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoBack;
        }
        private void set_72_WebView2_CanGoBack(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoBack = (global::System.Boolean)Value;
        }
        private object get_73_WebView2_CanGoForward(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoForward;
        }
        private void set_73_WebView2_CanGoForward(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoForward = (global::System.Boolean)Value;
        }
        private object get_74_WebView2_CoreWebView2(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CoreWebView2;
        }
        private object get_75_WebView2_DefaultBackgroundColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.DefaultBackgroundColor;
        }
        private void set_75_WebView2_DefaultBackgroundColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.DefaultBackgroundColor = (global::Windows.UI.Color)Value;
        }
        private object get_76_WebView2_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.Source;
        }
        private void set_76_WebView2_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_77_BlankPage2_FullScreen(object instance)
        {
            var that = (global::CompanionDisplayWinUI.BlankPage2)instance;
            return that.FullScreen;
        }
        private void set_77_BlankPage2_FullScreen(object instance, object Value)
        {
            var that = (global::CompanionDisplayWinUI.BlankPage2)instance;
            that.FullScreen = (global::System.Boolean)Value;
        }
        private object get_78_Expander_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.IsExpanded;
        }
        private void set_78_Expander_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_79_Expander_ExpandDirection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.ExpandDirection;
        }
        private void set_79_Expander_ExpandDirection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.ExpandDirection = (global::Microsoft.UI.Xaml.Controls.ExpandDirection)Value;
        }
        private object get_80_Expander_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.Header;
        }
        private void set_80_Expander_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_81_Expander_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplate;
        }
        private void set_81_Expander_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_82_Expander_HeaderTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_82_Expander_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_83_Expander_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.TemplateSettings;
        }
        private object get_84_ColorPicker_Color(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.Color;
        }
        private void set_84_ColorPicker_Color(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_85_ColorPicker_ColorSpectrumComponents(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.ColorSpectrumComponents;
        }
        private void set_85_ColorPicker_ColorSpectrumComponents(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.ColorSpectrumComponents = (global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents)Value;
        }
        private object get_86_ColorPicker_ColorSpectrumShape(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.ColorSpectrumShape;
        }
        private void set_86_ColorPicker_ColorSpectrumShape(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.ColorSpectrumShape = (global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape)Value;
        }
        private object get_87_ColorPicker_IsAlphaEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaEnabled;
        }
        private void set_87_ColorPicker_IsAlphaEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaEnabled = (global::System.Boolean)Value;
        }
        private object get_88_ColorPicker_IsAlphaSliderVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaSliderVisible;
        }
        private void set_88_ColorPicker_IsAlphaSliderVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaSliderVisible = (global::System.Boolean)Value;
        }
        private object get_89_ColorPicker_IsAlphaTextInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaTextInputVisible;
        }
        private void set_89_ColorPicker_IsAlphaTextInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaTextInputVisible = (global::System.Boolean)Value;
        }
        private object get_90_ColorPicker_IsColorChannelTextInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorChannelTextInputVisible;
        }
        private void set_90_ColorPicker_IsColorChannelTextInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorChannelTextInputVisible = (global::System.Boolean)Value;
        }
        private object get_91_ColorPicker_IsColorPreviewVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorPreviewVisible;
        }
        private void set_91_ColorPicker_IsColorPreviewVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorPreviewVisible = (global::System.Boolean)Value;
        }
        private object get_92_ColorPicker_IsColorSliderVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorSliderVisible;
        }
        private void set_92_ColorPicker_IsColorSliderVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorSliderVisible = (global::System.Boolean)Value;
        }
        private object get_93_ColorPicker_IsColorSpectrumVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorSpectrumVisible;
        }
        private void set_93_ColorPicker_IsColorSpectrumVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorSpectrumVisible = (global::System.Boolean)Value;
        }
        private object get_94_ColorPicker_IsHexInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsHexInputVisible;
        }
        private void set_94_ColorPicker_IsHexInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsHexInputVisible = (global::System.Boolean)Value;
        }
        private object get_95_ColorPicker_IsMoreButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsMoreButtonVisible;
        }
        private void set_95_ColorPicker_IsMoreButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsMoreButtonVisible = (global::System.Boolean)Value;
        }
        private object get_96_ColorPicker_MaxHue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxHue;
        }
        private void set_96_ColorPicker_MaxHue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxHue = (global::System.Int32)Value;
        }
        private object get_97_ColorPicker_MaxSaturation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxSaturation;
        }
        private void set_97_ColorPicker_MaxSaturation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxSaturation = (global::System.Int32)Value;
        }
        private object get_98_ColorPicker_MaxValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxValue;
        }
        private void set_98_ColorPicker_MaxValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxValue = (global::System.Int32)Value;
        }
        private object get_99_ColorPicker_MinHue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinHue;
        }
        private void set_99_ColorPicker_MinHue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinHue = (global::System.Int32)Value;
        }
        private object get_100_ColorPicker_MinSaturation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinSaturation;
        }
        private void set_100_ColorPicker_MinSaturation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinSaturation = (global::System.Int32)Value;
        }
        private object get_101_ColorPicker_MinValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinValue;
        }
        private void set_101_ColorPicker_MinValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinValue = (global::System.Int32)Value;
        }
        private object get_102_ColorPicker_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.Orientation;
        }
        private void set_102_ColorPicker_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_103_ColorPicker_PreviousColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.PreviousColor;
        }
        private void set_103_ColorPicker_PreviousColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.PreviousColor = (global::System.Nullable<global::Windows.UI.Color>)Value;
        }
        private object get_104_TabView_TabItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItems;
        }
        private object get_105_TabView_CanReorderTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanReorderTabs;
        }
        private void set_105_TabView_CanReorderTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanReorderTabs = (global::System.Boolean)Value;
        }
        private object get_106_TabView_TabStripHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeader;
        }
        private void set_106_TabView_TabStripHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeader = (global::System.Object)Value;
        }
        private object get_107_TabView_TabStripFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooter;
        }
        private void set_107_TabView_TabStripFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooter = (global::System.Object)Value;
        }
        private object get_108_TabView_AddTabButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommand;
        }
        private void set_108_TabView_AddTabButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_109_TabView_AddTabButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommandParameter;
        }
        private void set_109_TabView_AddTabButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_110_TabView_AllowDropTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AllowDropTabs;
        }
        private void set_110_TabView_AllowDropTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AllowDropTabs = (global::System.Boolean)Value;
        }
        private object get_111_TabView_CanDragTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanDragTabs;
        }
        private void set_111_TabView_CanDragTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanDragTabs = (global::System.Boolean)Value;
        }
        private object get_112_TabView_CanTearOutTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanTearOutTabs;
        }
        private void set_112_TabView_CanTearOutTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanTearOutTabs = (global::System.Boolean)Value;
        }
        private object get_113_TabView_CloseButtonOverlayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CloseButtonOverlayMode;
        }
        private void set_113_TabView_CloseButtonOverlayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CloseButtonOverlayMode = (global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode)Value;
        }
        private object get_114_TabView_IsAddTabButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.IsAddTabButtonVisible;
        }
        private void set_114_TabView_IsAddTabButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.IsAddTabButtonVisible = (global::System.Boolean)Value;
        }
        private object get_115_TabView_SelectedIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedIndex;
        }
        private void set_115_TabView_SelectedIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_116_TabView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedItem;
        }
        private void set_116_TabView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_117_TabView_TabItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplate;
        }
        private void set_117_TabView_TabItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_118_TabView_TabItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplateSelector;
        }
        private void set_118_TabView_TabItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_119_TabView_TabItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemsSource;
        }
        private void set_119_TabView_TabItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemsSource = (global::System.Object)Value;
        }
        private object get_120_TabView_TabStripFooterTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooterTemplate;
        }
        private void set_120_TabView_TabStripFooterTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooterTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_121_TabView_TabStripHeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeaderTemplate;
        }
        private void set_121_TabView_TabStripHeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_122_TabView_TabWidthMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabWidthMode;
        }
        private void set_122_TabView_TabWidthMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabWidthMode = (global::Microsoft.UI.Xaml.Controls.TabViewWidthMode)Value;
        }
        private object get_123_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_123_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_124_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_124_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_125_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_125_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_126_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_126_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_127_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_127_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_128_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_129_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_129_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_130_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_131_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_132_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_133_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_134_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_134_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_135_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_136_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_137_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_138_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_139_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_139_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_140_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_141_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_141_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_142_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_142_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_143_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_143_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_144_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_144_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_145_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_145_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_146_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_146_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_147_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_147_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_148_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_149_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_149_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_150_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_151_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_152_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_153_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_153_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_154_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_155_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_155_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_156_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_156_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_157_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_157_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_158_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_158_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_159_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_160_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_161_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_161_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_162_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_163_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_163_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_164_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_165_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_165_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_166_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_167_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_168_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_168_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_169_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_169_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_170_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember xamlMember = null;
            global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Media.AcrylicBrush.TintOpacity":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.AcrylicBrush");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TintOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_AcrylicBrush_TintOpacity;
                xamlMember.Setter = set_1_AcrylicBrush_TintOpacity;
                break;
            case "Microsoft.UI.Xaml.Media.AcrylicBrush.TintColor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.AcrylicBrush");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TintColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_AcrylicBrush_TintColor;
                xamlMember.Setter = set_2_AcrylicBrush_TintColor;
                break;
            case "Microsoft.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallback":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.AcrylicBrush");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AlwaysUseFallback", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_AcrylicBrush_AlwaysUseFallback;
                xamlMember.Setter = set_3_AcrylicBrush_AlwaysUseFallback;
                break;
            case "Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacity":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.AcrylicBrush");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TintLuminosityOpacity", "System.Nullable`1<Double>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_AcrylicBrush_TintLuminosityOpacity;
                xamlMember.Setter = set_4_AcrylicBrush_TintLuminosityOpacity;
                break;
            case "Microsoft.UI.Xaml.Media.AcrylicBrush.TintTransitionDuration":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.AcrylicBrush");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TintTransitionDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_AcrylicBrush_TintTransitionDuration;
                xamlMember.Setter = set_5_AcrylicBrush_TintTransitionDuration;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_6_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_7_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_8_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_9_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_10_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_NavigationView_ContentOverlay;
                xamlMember.Setter = set_11_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_13_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_15_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_NavigationView_Header;
                xamlMember.Setter = set_16_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_17_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_18_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_19_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_20_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_21_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_22_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_23_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_24_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_25_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_26_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_27_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_28_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_30_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_31_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_32_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_33_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_34_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_NavigationView_PaneFooter;
                xamlMember.Setter = set_35_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_NavigationView_PaneHeader;
                xamlMember.Setter = set_36_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_NavigationView_PaneTitle;
                xamlMember.Setter = set_37_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_NavigationView_SelectedItem;
                xamlMember.Setter = set_38_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_39_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_41_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.ScrollViewer":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ScrollViewer", "Microsoft.UI.Xaml.Controls.ScrollViewer");
                xamlMember.Getter = get_43_ItemsRepeaterScrollHost_ScrollViewer;
                xamlMember.Setter = set_43_ItemsRepeaterScrollHost_ScrollViewer;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.CurrentAnchor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_44_ItemsRepeaterScrollHost_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.HorizontalAnchorRatio":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.Getter = get_45_ItemsRepeaterScrollHost_HorizontalAnchorRatio;
                xamlMember.Setter = set_45_ItemsRepeaterScrollHost_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.VerticalAnchorRatio":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.Getter = get_46_ItemsRepeaterScrollHost_VerticalAnchorRatio;
                xamlMember.Setter = set_46_ItemsRepeaterScrollHost_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_47_NavigationViewItemBase_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_ItemsRepeater_ItemTemplate;
                xamlMember.Setter = set_48_ItemsRepeater_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ItemsRepeater_Layout;
                xamlMember.Setter = set_49_ItemsRepeater_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Background":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ItemsRepeater_Background;
                xamlMember.Setter = set_50_ItemsRepeater_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ItemsRepeater_HorizontalCacheLength;
                xamlMember.Setter = set_51_ItemsRepeater_HorizontalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTransitionProvider":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ItemTransitionProvider", "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ItemsRepeater_ItemTransitionProvider;
                xamlMember.Setter = set_52_ItemsRepeater_ItemTransitionProvider;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ItemsRepeater_ItemsSource;
                xamlMember.Setter = set_53_ItemsRepeater_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ItemsSourceView", "Microsoft.UI.Xaml.Controls.ItemsSourceView");
                xamlMember.Getter = get_54_ItemsRepeater_ItemsSourceView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_ItemsRepeater_VerticalCacheLength;
                xamlMember.Setter = set_55_ItemsRepeater_VerticalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Orientation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_StackLayout_Orientation;
                xamlMember.Setter = set_56_StackLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Spacing":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_StackLayout_Spacing;
                xamlMember.Setter = set_57_StackLayout_Spacing;
                break;
            case "Microsoft.UI.Xaml.Controls.Layout.IndexBasedLayoutOrientation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IndexBasedLayoutOrientation", "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation");
                xamlMember.Getter = get_58_Layout_IndexBasedLayoutOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.UI.Color.A":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_59_Color_A;
                xamlMember.Setter = set_59_Color_A;
                break;
            case "Windows.UI.Color.R":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_60_Color_R;
                xamlMember.Setter = set_60_Color_R;
                break;
            case "Windows.UI.Color.G":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_61_Color_G;
                xamlMember.Setter = set_61_Color_G;
                break;
            case "Windows.UI.Color.B":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_62_Color_B;
                xamlMember.Setter = set_62_Color_B;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_NavigationViewItem_Icon;
                xamlMember.Setter = set_63_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_64_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_66_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_67_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_68_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_69_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_71_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoBack":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CanGoBack", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_WebView2_CanGoBack;
                xamlMember.Setter = set_72_WebView2_CanGoBack;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoForward":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CanGoForward", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_WebView2_CanGoForward;
                xamlMember.Setter = set_73_WebView2_CanGoForward;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CoreWebView2":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CoreWebView2", "Microsoft.Web.WebView2.Core.CoreWebView2");
                xamlMember.Getter = get_74_WebView2_CoreWebView2;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.DefaultBackgroundColor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "DefaultBackgroundColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_WebView2_DefaultBackgroundColor;
                xamlMember.Setter = set_75_WebView2_DefaultBackgroundColor;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.Source":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_WebView2_Source;
                xamlMember.Setter = set_76_WebView2_Source;
                break;
            case "CompanionDisplayWinUI.BlankPage2.FullScreen":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CompanionDisplayWinUI.BlankPage2");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "FullScreen", "Boolean");
                xamlMember.Getter = get_77_BlankPage2_FullScreen;
                xamlMember.Setter = set_77_BlankPage2_FullScreen;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.IsExpanded":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_Expander_IsExpanded;
                xamlMember.Setter = set_78_Expander_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.ExpandDirection":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ExpandDirection", "Microsoft.UI.Xaml.Controls.ExpandDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_Expander_ExpandDirection;
                xamlMember.Setter = set_79_Expander_ExpandDirection;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.Header":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_Expander_Header;
                xamlMember.Setter = set_80_Expander_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_Expander_HeaderTemplate;
                xamlMember.Setter = set_81_Expander_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplateSelector":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_Expander_HeaderTemplateSelector;
                xamlMember.Setter = set_82_Expander_HeaderTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.TemplateSettings":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings");
                xamlMember.Getter = get_83_Expander_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.Color":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_ColorPicker_Color;
                xamlMember.Setter = set_84_ColorPicker_Color;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponents":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ColorSpectrumComponents", "Microsoft.UI.Xaml.Controls.ColorSpectrumComponents");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_ColorPicker_ColorSpectrumComponents;
                xamlMember.Setter = set_85_ColorPicker_ColorSpectrumComponents;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShape":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ColorSpectrumShape", "Microsoft.UI.Xaml.Controls.ColorSpectrumShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_ColorPicker_ColorSpectrumShape;
                xamlMember.Setter = set_86_ColorPicker_ColorSpectrumShape;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabled":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsAlphaEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_ColorPicker_IsAlphaEnabled;
                xamlMember.Setter = set_87_ColorPicker_IsAlphaEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsAlphaSliderVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_ColorPicker_IsAlphaSliderVisible;
                xamlMember.Setter = set_88_ColorPicker_IsAlphaSliderVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsAlphaTextInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_ColorPicker_IsAlphaTextInputVisible;
                xamlMember.Setter = set_89_ColorPicker_IsAlphaTextInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsColorChannelTextInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_ColorPicker_IsColorChannelTextInputVisible;
                xamlMember.Setter = set_90_ColorPicker_IsColorChannelTextInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsColorPreviewVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_ColorPicker_IsColorPreviewVisible;
                xamlMember.Setter = set_91_ColorPicker_IsColorPreviewVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsColorSliderVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_ColorPicker_IsColorSliderVisible;
                xamlMember.Setter = set_92_ColorPicker_IsColorSliderVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsColorSpectrumVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_ColorPicker_IsColorSpectrumVisible;
                xamlMember.Setter = set_93_ColorPicker_IsColorSpectrumVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsHexInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_ColorPicker_IsHexInputVisible;
                xamlMember.Setter = set_94_ColorPicker_IsHexInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsMoreButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_ColorPicker_IsMoreButtonVisible;
                xamlMember.Setter = set_95_ColorPicker_IsMoreButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxHue":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MaxHue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_ColorPicker_MaxHue;
                xamlMember.Setter = set_96_ColorPicker_MaxHue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MaxSaturation", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_ColorPicker_MaxSaturation;
                xamlMember.Setter = set_97_ColorPicker_MaxSaturation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxValue":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MaxValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_ColorPicker_MaxValue;
                xamlMember.Setter = set_98_ColorPicker_MaxValue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinHue":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MinHue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_ColorPicker_MinHue;
                xamlMember.Setter = set_99_ColorPicker_MinHue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MinSaturation", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_ColorPicker_MinSaturation;
                xamlMember.Setter = set_100_ColorPicker_MinSaturation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinValue":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MinValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_ColorPicker_MinValue;
                xamlMember.Setter = set_101_ColorPicker_MinValue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.Orientation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_ColorPicker_Orientation;
                xamlMember.Setter = set_102_ColorPicker_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "PreviousColor", "System.Nullable`1<Windows.UI.Color>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_ColorPicker_PreviousColor;
                xamlMember.Setter = set_103_ColorPicker_PreviousColor;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItems":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_TabView_TabItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanReorderTabs":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CanReorderTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_TabView_CanReorderTabs;
                xamlMember.Setter = set_105_TabView_CanReorderTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeader":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabStripHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_TabView_TabStripHeader;
                xamlMember.Setter = set_106_TabView_TabStripHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooter":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabStripFooter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_TabView_TabStripFooter;
                xamlMember.Setter = set_107_TabView_TabStripFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommand":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AddTabButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_TabView_AddTabButtonCommand;
                xamlMember.Setter = set_108_TabView_AddTabButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommandParameter":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AddTabButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_TabView_AddTabButtonCommandParameter;
                xamlMember.Setter = set_109_TabView_AddTabButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AllowDropTabs":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "AllowDropTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_TabView_AllowDropTabs;
                xamlMember.Setter = set_110_TabView_AllowDropTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanDragTabs":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CanDragTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_TabView_CanDragTabs;
                xamlMember.Setter = set_111_TabView_CanDragTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanTearOutTabs":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CanTearOutTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_TabView_CanTearOutTabs;
                xamlMember.Setter = set_112_TabView_CanTearOutTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CloseButtonOverlayMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CloseButtonOverlayMode", "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_TabView_CloseButtonOverlayMode;
                xamlMember.Setter = set_113_TabView_CloseButtonOverlayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.IsAddTabButtonVisible":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsAddTabButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_TabView_IsAddTabButtonVisible;
                xamlMember.Setter = set_114_TabView_IsAddTabButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedIndex":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_TabView_SelectedIndex;
                xamlMember.Setter = set_115_TabView_SelectedIndex;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedItem":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_TabView_SelectedItem;
                xamlMember.Setter = set_116_TabView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_TabView_TabItemTemplate;
                xamlMember.Setter = set_117_TabView_TabItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplateSelector":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_TabView_TabItemTemplateSelector;
                xamlMember.Setter = set_118_TabView_TabItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemsSource":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_TabView_TabItemsSource;
                xamlMember.Setter = set_119_TabView_TabItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooterTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabStripFooterTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_TabView_TabStripFooterTemplate;
                xamlMember.Setter = set_120_TabView_TabStripFooterTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeaderTemplate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabStripHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_TabView_TabStripHeaderTemplate;
                xamlMember.Setter = set_121_TabView_TabStripHeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabWidthMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TabWidthMode", "Microsoft.UI.Xaml.Controls.TabViewWidthMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_TabView_TabWidthMode;
                xamlMember.Setter = set_122_TabView_TabWidthMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_ProgressRing_Value;
                xamlMember.Setter = set_123_ProgressRing_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_124_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_ProgressRing_IsActive;
                xamlMember.Setter = set_125_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_ProgressRing_Maximum;
                xamlMember.Setter = set_126_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_ProgressRing_Minimum;
                xamlMember.Setter = set_127_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_128_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_ScrollView_Content;
                xamlMember.Setter = set_129_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_ScrollView_ContentOrientation;
                xamlMember.Setter = set_134_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_135_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_136_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_137_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_138_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_139_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_140_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_141_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_142_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_143_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_144_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_145_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_146_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_147_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ScrollPresenter_Content;
                xamlMember.Setter = set_149_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_150_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_151_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_152_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_153_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_154_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_155_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_156_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_157_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_158_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_159_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_160_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_161_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_162_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_ScrollView_ZoomMode;
                xamlMember.Setter = set_163_ScrollView_ZoomMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_164_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_TreeViewNode_Content;
                xamlMember.Setter = set_165_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_168_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_168_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_169_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_170_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::CompanionDisplayWinUI.CompanionDisplayWinUI_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

